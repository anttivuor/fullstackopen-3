{"version":3,"sources":["filter.js","notification.js","personForm.js","persons.js","services/persons.js","App.js","reportWebVitals.js","index.js"],"names":["Filter","value","onChange","Notification","message","color","undefined","className","PersonForm","name","number","onChangeName","onChangeNumber","onSubmit","type","Item","deletePerson","onClick","Persons","persons","map","p","id","baseUrl","axios","get","then","response","data","newObject","post","delete","put","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","filter","setFilter","notification","setNotification","updatePerson","person","newPerson","personService","res","newPersons","setTimeout","catch","error","console","useEffect","e","target","event","preventDefault","existing","find","window","confirm","log","toLowerCase","includes","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yNAceA,EAXA,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACb,qDACoB,uBAAOD,MAAOA,EAAOC,SAAUA,QCetCC,EAjBM,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,QAASC,EAAY,EAAZA,MAC/B,YAAgBC,IAAZF,EACK,KAIP,qBAAKG,UAAS,uBAAkBF,GAAhC,SACGD,KCeQI,EAtBI,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,OAAQC,EAAjB,EAAiBA,aAAcC,EAA/B,EAA+BA,eAAgBC,EAA/C,EAA+CA,SAA/C,OACjB,uBAAMA,SAAUA,EAAhB,UACE,yCACQ,uBAAOZ,MAAOQ,EAAMP,SAAUS,OAEtC,2CACU,uBAAOV,MAAOS,EAAQR,SAAUU,OAE1C,8BACE,wBAAQE,KAAK,SAAb,uBCTAC,EAAO,SAAC,GAAD,IAAGN,EAAH,EAAGA,KAAMC,EAAT,EAASA,OAAQM,EAAjB,EAAiBA,aAAjB,OACX,8BACGP,EADH,IACUC,EACR,wBAAQO,QAASD,EAAjB,wBAqBWE,EAXC,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASH,EAAZ,EAAYA,aAAZ,OACdG,EAAQC,KAAI,SAAAC,GAAC,OACX,cAAC,EAAD,CACEZ,KAAMY,EAAEZ,KACRC,OAAQW,EAAEX,OACVM,aAAc,kBAAMA,EAAaK,EAAEZ,KAAMY,EAAEC,MACtCD,EAAEZ,U,gBCrBPc,EAAU,eAuBD,EArBA,WAEb,OADgBC,IAAMC,IAAIF,GACXG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAmB5B,EAhBA,SAAAC,GAEb,OADgBL,IAAMM,KAAKP,EAASM,GACrBH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAc5B,EAXA,SAAAN,GAEb,OADgBE,IAAMO,OAAN,UAAgBR,EAAhB,YAA2BD,KAU9B,EANA,SAACA,EAAIO,GAElB,OADgBL,IAAMQ,IAAN,UAAaT,EAAb,YAAwBD,GAAMO,GAC/BH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SCwG5BK,EApHH,WAAO,IAAD,EACcC,mBAAS,IADvB,mBACTf,EADS,KACAgB,EADA,OAEcD,mBAAS,IAFvB,mBAETE,EAFS,KAEAC,EAFA,OAGkBH,mBAAS,IAH3B,mBAGTI,EAHS,KAGEC,EAHF,OAIYL,mBAAS,IAJrB,mBAITM,EAJS,KAIDC,EAJC,OAKwBP,mBAAS,IALjC,mBAKTQ,EALS,KAKKC,EALL,KAkCVC,EAAe,SAACC,EAAQnC,GAC5B,IAAMoC,EAAS,2BAAQD,GAAR,IAAgBnC,WAC/BqC,EAAqBF,EAAOvB,GAAIwB,GAC7BpB,MAAK,SAAAsB,GACJ,IAAMC,EAAa9B,EAAQC,KAAI,SAAAC,GAC7B,OAAIA,EAAEC,KAAOuB,EAAOvB,GAAW0B,EACnB3B,KAEdc,EAAWc,GACXZ,EAAW,IACXE,EAAa,IACbI,EAAgB,CAAEvC,QAAQ,WAAD,OAAa0C,EAAUrC,MAAQJ,MAAO,UAC/D6C,YAAW,kBAAMP,EAAgB,MAAK,QAEvCQ,OAAM,SAAAC,GACLC,QAAQD,MAAMA,GACdT,EAAgB,CAAEvC,QAAQ,kBAAD,OAAoB0C,EAAUrC,MAAQJ,MAAO,QACtE6C,YAAW,kBAAMP,EAAgB,MAAK,SAgB5CW,qBAZkB,WAChBP,IACGrB,MAAK,SAAAsB,GACJb,EAAWa,MAEZG,OAAM,SAAAC,GACLC,QAAQD,MAAMA,GACdT,EAAgB,CAAEvC,QAAS,uBAAwBC,MAAO,QAC1D6C,YAAW,kBAAMP,EAAgB,MAAK,UAIvB,IAErB,IAMM3B,EAAe,SAACP,EAAMa,GAC1ByB,EAAqBzB,GAClBI,MAAK,WACJS,EAAWhB,EAAQqB,QAAO,SAAAnB,GAAC,OAAIA,EAAEC,KAAOA,MACxCqB,EAAgB,CAAEvC,QAAQ,WAAD,OAAaK,GAAQJ,MAAO,UACrD6C,YAAW,kBAAMP,EAAgB,MAAK,QAEvCQ,OAAM,SAAAC,GACLC,QAAQD,MAAMA,GACdT,EAAgB,CAAEvC,QAAQ,oBAAD,OAAsBK,EAAtB,yCAAmEJ,MAAO,QACnG6C,YAAW,kBAAMP,EAAgB,MAAK,SAI5C,OACE,gCACE,2CAEA,cAAC,EAAD,CAAcvC,QAASsC,EAAatC,QAASC,MAAOqC,EAAarC,QAEjE,cAAC,EAAD,CAAQJ,MAAOuC,EAAQtC,SAAU,SAAAqD,GAAC,OAAId,EAAUc,EAAEC,OAAOvD,UAEzD,2CACA,cAAC,EAAD,CACEQ,KAAM2B,EACN1B,OAAQ4B,EACR3B,aAAc,SAAA4C,GAAC,OAAIlB,EAAWkB,EAAEC,OAAOvD,QACvCW,eAAgB,SAAA2C,GAAC,OAAIhB,EAAagB,EAAEC,OAAOvD,QAC3CY,SAhGW,SAAA4C,GACfA,EAAMC,iBAEN,IAAMC,EAAWxC,EAAQyC,MAAK,qBAAGnD,OAAoB2B,KACrD,QAAiB9B,IAAbqD,EACEE,OAAOC,QAAP,UAAkB1B,EAAlB,4EACFQ,EAAae,EAAUrB,OAEpB,CACL,IAAMQ,EAAY,CAAErC,KAAM2B,EAAS1B,OAAQ4B,GAC3CS,EAAqBD,GAClBpB,MAAK,SAAAsB,GACJK,QAAQU,IAAI,MAAOf,GACnBb,EAAW,GAAD,mBAAKhB,GAAL,CAAc6B,KACxBX,EAAW,IACXE,EAAa,IACbI,EAAgB,CAAEvC,QAAQ,SAAD,OAAW0C,EAAUrC,MAAQJ,MAAO,UAC7D6C,YAAW,kBAAMP,EAAgB,MAAK,QAEvCQ,OAAM,SAAAC,GAAU,IAAD,IACRhD,GAAU,UAAAgD,EAAMzB,gBAAN,mBAAgBC,YAAhB,eAAsBwB,QAASA,EAAMhD,QACrDuC,EAAgB,CAAEvC,QAAQ,iBAAD,OAAmB0C,EAAUrC,KAA7B,aAAsCL,EAAtC,KAAkDC,MAAO,QAClF6C,YAAW,kBAAMP,EAAgB,MAAK,YA6E1C,yCACA,cAAC,EAAD,CACExB,QAASA,EAAQqB,QAAO,qBAAG/B,KAAgBuD,cAAcC,SAASzB,EAAOwB,kBACzEhD,aAxCc,SAACP,EAAMa,GACrBuC,OAAOC,QAAP,uCAA+CrD,EAA/C,OACFO,EAAaP,EAAMa,UCnEV4C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB1C,MAAK,YAAkD,IAA/C2C,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.926fc780.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\nimport React from 'react'\n\nconst Filter = ({ value, onChange }) => (\n  <div>\n    filter shown with <input value={value} onChange={onChange} />\n  </div>\n)\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func.isRequired\n}\n\nexport default Filter","import PropTypes from 'prop-types'\nimport React from 'react'\n\nconst Notification = ({ message, color }) => {\n  if (message === undefined) {\n    return null\n  }\n\n  return (\n    <div className={`notification ${color}`}>\n      {message}\n    </div>\n  )\n}\n\nNotification.propTypes = {\n  message: PropTypes.string,\n  color: PropTypes.oneOf(['red', 'green'])\n}\n\nexport default Notification","import PropTypes from 'prop-types'\nimport React from 'react'\n\nconst PersonForm = ({ name, number, onChangeName, onChangeNumber, onSubmit }) => (\n  <form onSubmit={onSubmit}>\n    <div>\n      name: <input value={name} onChange={onChangeName}/>\n    </div>\n    <div>\n      number: <input value={number} onChange={onChangeNumber}/>\n    </div>\n    <div>\n      <button type=\"submit\">add</button>\n    </div>\n  </form>\n)\n\nPersonForm.propTypes = {\n  name: PropTypes.string,\n  number: PropTypes.string,\n  onChangeName: PropTypes.func.isRequired,\n  onChangeNumber: PropTypes.func.isRequired,\n  onSubmit: PropTypes.func.isRequired\n}\n\nexport default PersonForm","import PropTypes from 'prop-types'\nimport React from 'react'\n\nconst Item = ({ name, number, deletePerson }) => (\n  <p>\n    {name} {number}\n    <button onClick={deletePerson}>delete</button>\n  </p>\n)\n\nItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  deletePerson: PropTypes.func.isRequired\n}\n\nconst Persons = ({ persons, deletePerson }) => (\n  persons.map(p => (\n    <Item\n      name={p.name}\n      number={p.number}\n      deletePerson={() => deletePerson(p.name, p.id)}\n      key={p.name}\n    />\n  ))\n)\n\nexport default Persons","import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst remove = id => {\n  const request = axios.delete(`${baseUrl}/${id}`)\n  return request\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\n\nexport default {\n  getAll,\n  create,\n  remove,\n  update\n}","import React, { useEffect, useState } from 'react'\n\nimport Filter from './filter'\nimport Notification from './notification'\nimport PersonForm from './personForm'\nimport Persons from './persons'\nimport personService from './services/persons'\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [filter, setFilter] = useState('')\n  const [notification, setNotification] = useState({})\n\n  const onSubmit = event => {\n    event.preventDefault()\n\n    const existing = persons.find(({ name }) => name === newName)\n    if (existing !== undefined) {\n      if (window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) {\n        updatePerson(existing, newNumber)\n      }\n    } else {\n      const newPerson = { name: newName, number: newNumber }\n      personService.create(newPerson)\n        .then(res => {\n          console.log('res', res)\n          setPersons([...persons, res])\n          setNewName('')\n          setNewNumber('')\n          setNotification({ message: `Added ${newPerson.name}`, color: 'green' })\n          setTimeout(() => setNotification({}), 5000)\n        })\n        .catch(error => {\n          const message = error.response?.data?.error || error.message\n          setNotification({ message: `Failed to add ${newPerson.name} (${message})`, color: 'red' })\n          setTimeout(() => setNotification({}), 5000)\n        })\n    }\n  }\n\n  const updatePerson = (person, number) => {\n    const newPerson = { ...person, number }\n    personService.update(person.id, newPerson)\n      .then(res => {\n        const newPersons = persons.map(p => {\n          if (p.id === person.id) return res\n          else return p\n        })\n        setPersons(newPersons)\n        setNewName('')\n        setNewNumber('')\n        setNotification({ message: `Updated ${newPerson.name}`, color: 'green' })\n        setTimeout(() => setNotification({}), 5000)\n      })\n      .catch(error => {\n        console.error(error)\n        setNotification({ message: `Failed to edit ${newPerson.name}`, color: 'red' })\n        setTimeout(() => setNotification({}), 5000)\n      })\n  }\n\n  const fetchData = () => {\n    personService.getAll()\n      .then(res => {\n        setPersons(res)\n      })\n      .catch(error => {\n        console.error(error)\n        setNotification({ message: 'Failed to fetch data', color: 'red' })\n        setTimeout(() => setNotification({}), 5000)\n      })\n  }\n\n  useEffect(fetchData, [])\n\n  const askToDelete = (name, id) => {\n    if (window.confirm(`Do you really want to remove ${name}?`)) {\n      deletePerson(name, id)\n    }\n  }\n\n  const deletePerson = (name, id) => {\n    personService.remove(id)\n      .then(() => {\n        setPersons(persons.filter(p => p.id !== id))\n        setNotification({ message: `Deleted ${name}`, color: 'green' })\n        setTimeout(() => setNotification({}), 5000)\n      })\n      .catch(error => {\n        console.error(error)\n        setNotification({ message: `Failed to delete ${name} (information may already be deleted)`, color: 'red' })\n        setTimeout(() => setNotification({}), 5000)\n      })\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n\n      <Notification message={notification.message} color={notification.color} />\n\n      <Filter value={filter} onChange={e => setFilter(e.target.value)} />\n\n      <h2>add a new</h2>\n      <PersonForm\n        name={newName}\n        number={newNumber}\n        onChangeName={e => setNewName(e.target.value)}\n        onChangeNumber={e => setNewNumber(e.target.value)}\n        onSubmit={onSubmit}\n      />\n\n      <h2>Numbers</h2>\n      <Persons\n        persons={persons.filter(({ name }) => name.toLowerCase().includes(filter.toLowerCase()))}\n        deletePerson={askToDelete}\n      />\n    </div>\n  )\n\n}\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}